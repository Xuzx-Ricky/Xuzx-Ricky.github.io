{"posts":[{"title":"start my blog","text":"","link":"/2025/08/07/start-my-blog/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2025/08/06/hello-world/"},{"title":"奇奇怪怪的数学计算方法1：Navasesh","text":"奇奇怪怪的数学计算方法1：Navasesh “先别往下翻，拿张纸写三行算式，让大脑动起来 0. 热身题：30 秒验算挑战如果没找到笔，在心里默算就行—— 45 − 23 = 21 897 + 543 = 1440 364 × 576 = 207664 规则：不许动笔/按计算器，30 秒后给出“对”还是“错”。计时开始——嘀嗒、嘀嗒……停！ 现在摸摸心跳： 如果三题都斩钉截铁，恭喜，你是隐藏大佬； 只要有一题犹豫半秒，请自觉把口袋里的糖放在桌上，因为接下来你会把糖赢回去。 1. 苹果树下的赌局（本章为AI撰写）故事得从一棵歪脖子苹果树说起。 那天阳光很好，风把树叶吹得沙沙响。树下坐着两个人： 阿南，镇上出名的“心算狂魔”，据说能口算四位数乘法； 小洛，刚放学、手里攥着半包辣条的小学生。 辣条在石桌上一拍，小洛放话：“比快！谁先说出答案对错，谁就赢走对方手里的零食。”阿南懒洋洋地咬了一口苹果：“行，苹果归你，辣条归我。” 裁判是一只橘猫，叫“肥仔”。它每天的工作就是晒太阳，今天被迫营业。 第一局：13 + 14 = 27肥仔喵了一声，计时开始。小洛：“正确！”阿南：“正确！”两人几乎同时出口，平局。 第二局：1071 − 373 = 708空气突然安静。阿南眉头拧成“川”字，嘴里念念有词，手指在膝盖上悄悄比划。小洛却咧嘴一笑：“错误！”肥仔甩甩尾巴，宣布小洛得分。 阿南瞪眼：“你怎么做到的？”小洛耸肩：“我用 Navasesh。” 第三局：1632 × 3779 = 6167328四位数乘法？阿南额头开始冒汗。小洛：“正确！”阿南还在掰指头，肥仔已经懒洋洋地判了小洛再得一分。 辣条彻底搬家。阿南不服：“作弊！”小洛摊手：“我只是把数字‘捏’成了一位数。” 2. 什么是Navasesh？小时候，我们靠“逆运算”检查作业；印度人却说：“把数字捏成一位数，对错一眼便知！”他们管这招叫 Navasesh（नवसेष，意为“余九”）。 Navasesh 不是小聪明，而是印度先人留下的数字验算方法。核心原理： 任何整数，把它各位相加，一路加到只剩一位，这个数字和原数模 9 同余。 没能看懂？拆成三步，逐个理解。 2.1 第一步：拆——无限拆解，直到一位官方叫“数位根”，民间叫“捏小”——把一个数所有数字相加，再加到只剩一位。 25 → 2 + 5 = 7 64 → 6 + 4 = 10 → 1 + 0 = 1 9876543210 → 9+8+7+6+5+4+3+2+1+0 = 45 → 4+5 = 9(=0,在这种验算方法中9等价于0) 小技巧：看到 9 直接扔掉！因为 9 ≡ 0 (mod 9)，所以 45187 → （4+5）+（1+8）+7 = 7，一步到位。 2.2 第二步：算——对“捏小”后的数做原运算把“捏小”后的数，原封不动地代回原算式。 原式 捏后代入 结果 13 + 14 4 + 5 9 1071 − 373 9 − 4 5 1632 × 3779 3 × 8 24 → 6 2.3 第三步：比——只看最后一位“模 9 取余”把等式右边的答案也“捏小”，与第二步结果对比（该方法不适于除法）： 13 + 14 = 27 → N(27)=2+7=9，与原式结果 9 相符 ✅ 1071 − 373 = 708 → N(708)=15=1+5=6，与 5 不符 ❌ 1632 × 3779 = 6167328 → N(6167328)=33→6，与 6 相符 ✅ 不符必错，相符极可能对（概率约为88.9 %）。 该概率假设错误值在足够大的整数范围内均匀分布 2.4 局限性如： 3 + 11 = 5 分别做一次 Navasesh 验证： 算式 Navasesh 结果 判断 3 + 2 3 + 2 = 5 5 相符 ✅ 5 5 5 相符 ✅ 左右两边模 9 都等于 5，Navasesh 判定“正确”，可实际上 3 + 11 = 14 ≠ 5。这就是典型的 伪阳性——Navasesh 说“没问题”，但算式实际错误。 3. 原理探究 3.1 为什么是 9，不是 8 或 10？把 1 到 9 全部乘以 2 到 9，再取模 9，你会发现： 乘 2：2,4,6,8,1,3,5,7,0 乘 3：3,6,0,3,6,0,3,6,0 … 乘 9：0,0,0,… 所有结果都在 0–8 之间循环，9 的倍数天然归零。因此，数字和与自身模 9 同余，成为最快速的方法。 3.2 简单证明 把正整数 A 写成十进位展开A = aₙ·10ⁿ + aₙ₋₁·10ⁿ⁻¹ + … + a₁·10 + a₀，其中 0 ≤ aᵢ ≤ 9，aₙ ≠ 0。 我们记N(A) 为 A 的数位根，即不断求数字和直至一位。 目标证明：A ≡ N(A) (mod 9)。只要这一条成立，Navasesh 的全部验算（加、减、乘）立刻跟着成立，因为模运算对这三种运算天然同余。 递等式链 行 表达式 理由 (1) A = aₙ·10ⁿ + aₙ₋₁·10ⁿ⁻¹ + … + a₁·10 + a₀ 十进位展开 (2) 10 ≡ 1 (mod 9) 10 − 1 = 9 (3) 10ᵏ ≡ 1ᵏ ≡ 1 (mod 9) 对 (2) 取 k 次幂 (4) A ≡ aₙ·1 + aₙ₋₁·1 + … + a₁·1 + a₀ (mod 9) 把 (3) 代入 (1) (5) A ≡ (aₙ + aₙ₋₁ + … + a₁ + a₀) (mod 9) 整理 (6) 若数字和仍 ≥ 10，重复 (1)–(5) 有限步必得一位数 (7) A ≡ N(A) (mod 9) 最终一位即 N(A) 结论由 (7) 可知，任何整数 A 与其数位根 N(A) 在模 9 下同余。因此： 若 A + B = C，则 N(A)+N(B) ≡ N(C) (mod 9)； 若 A − B = C，则 N(A)−N(B) ≡ N(C) (mod 9)； 若 A × B = C，则 N(A)·N(B) ≡ N(C) (mod 9)。 Navasesh 的验算规则，本质就是“把模 9 同余式再人工算一遍”。证毕。 4. 实战演练：把糖赢回来现在回到开头的三道题，我们用 Navasesh 再走一遍。 题目 1：45 − 23 = 21 N(45) = 9 → 0 N(23) = 5 0 − 5 = −5 → 负数加 9：−5 + 9 = 4 N(21) = 3 4 ≠ 3 ⇒ 错误（正确答案是 22） 题目 2：897 + 543 = 1440 N(897) = 8+9+7 = 24 → 6 N(543) = 5+4+3 = 12 → 3 6 + 3 = 9 N(1440) = 1+4+4+0 = 9 9 = 9 ⇒ 正确 题目 3：364 × 576 = 207664 N(364) = 3+6+4 = 13 → 4 N(576) = 5+7+6 = 18 → 0 4 × 0 = 0 N(207664) = 2+0+7+6+6+4 = 25 → 7 0 ≠ 7 ⇒ 错误 30 秒不到，三道题全部判完，糖可以拿回来了。 5. 高阶玩法：不只判对错，还能猜数字5.1 速查乘法表 99 × 87 = ? N(99)=0，N(87)=6 → 结果数字根必为 0。 真值 8613 → 8+6+1+3=18 → 0，验证通过。 5.2 魔术表演：蒙眼猜和让观众随便写个 5 位数，再写一个，你把它们相加，不用看，直接报出结果正确与否。观众震惊：你怎么知道？你笑而不语：Navasesh。 6. 高阶：把 Navasesh 写进 Python三行代码，把“Navasesh”做成函数： 12n = int(input('请输入整数：'))print('Navasesh =', 9 if n % 9 == 0 and n != 0 else n % 9) 7. 小结 &amp; 预告今天我们用“苹果树下赌辣条”的故事，学会了 Navasesh： 拆——把数字捏成一位数 算——对“捏小”后的数做原运算 比——模 9 同余即正确 下一篇，我们将解锁 “十位数相同、个位凑十” 的乘法： 73 × 77 = ？五秒算出答案 📚 参考资料（按引用场景分组） 用途 推荐条目 出处 历史溯源 《吠陀数学》Bharati Krishna Tirthaji 原著 英文维基 “Vedic Mathematics” 条目 https://en.wikipedia.org/wiki/Vedic_Mathematics “数位根”定义 Wolfram MathWorld – Digital Root https://mathworld.wolfram.com/DigitalRoot.html 模 9 同余证明 Khan Academy – Modular Arithmetic 基础视频 https://www.khanacademy.org/computing/computer-science/cryptography/modarithmetic/a/what-is-modular-arithmetic Python 数位根实现 Rosetta Code – Digital Root (Python) https://rosettacode.org/wiki/Digital_root#Python 漫画情节灵感 韩国数学漫画《数学世界历险记》第 3 卷 Navasesh 章节 无官方电子版权，可自行购买书籍","link":"/2025/08/11/%E5%A5%87%E5%A5%87%E6%80%AA%E6%80%AA%E7%9A%84%E6%95%B0%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%96%B9%E6%B3%951%EF%BC%9ANavasesh/"}],"tags":[{"name":"测试","slug":"测试","link":"/tags/%E6%B5%8B%E8%AF%95/"},{"name":"奇奇怪怪的数学计算方法","slug":"奇奇怪怪的数学计算方法","link":"/tags/%E5%A5%87%E5%A5%87%E6%80%AA%E6%80%AA%E7%9A%84%E6%95%B0%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%96%B9%E6%B3%95/"},{"name":"学习","slug":"学习","link":"/tags/%E5%AD%A6%E4%B9%A0/"},{"name":"原创","slug":"原创","link":"/tags/%E5%8E%9F%E5%88%9B/"}],"categories":[],"pages":[{"title":"about","text":"","link":"/about/index.html"},{"title":"relax","text":"🎮 Relax · 作品合集 一键试玩，灵感不停歇！点一点，就能飞、能战、能接金币！ ✈️ 作品 1：飞机大战驾驶超级战机，躲避子弹、击落敌机，挑战最高分！ 🧩 作品 2：空白作品一个区域，一层关卡，挑战无止境！ 🪙 作品 3：小游戏接硬币左右移动鼠标，接住从天而降的金币，看看你能拿多少分！ 🐾 我的编程猫主页前往社区查看更多作品 → 🎁 欢迎投稿如果你有 脑洞小游戏 实用小工具 炫酷动画 欢迎在评论区留言或邮件投稿让我们一起把创意变成可以玩的现实！","link":"/relax/index.html"},{"title":"hidden-page","text":"😵 404 · 咦，页面不见了！你刚刚打开的链接可能： 被作者手滑删掉 被猫踩了键盘 正在加载彩蛋…… 🎮 彩蛋时间点击下面的按钮，进入一款小游戏： 飞机大战 · 休闲一刻 🏠 回到安全区返回首页 · 查看所有文章 彩蛋彩蛋，再也不见~如果游戏打不开，刷新试试 😉","link":"/hidden-page/index.html"},{"title":"categories","text":"","link":"/categories/index.html"},{"title":"tags","text":"","link":"/tags/index.html"}]}